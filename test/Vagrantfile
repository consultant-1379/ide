# -*- mode: ruby -*-i
# vi: set ft=ruby :

ENV['CURRENT_USER'] = [ENV['USER'],ENV['USERNAME']].compact[0]

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

$install_ide = <<SCRIPT
    echo "Configure locale..."
    apt-get -y update
    apt-get -y install language-pack-en dictionaries-common
    locale-gen en_IE.UTF-8

    echo "Adding ENM-IDE GPG key..."
    wget -q -O - http://atrcx1933vm12.athtem.eei.ericsson.se/ide/enm-ide.gpg.key | apt-key add -

    echo "Adding ENM-IDE PPA repository..."
    echo "deb http://atrcx1933vm12.athtem.eei.ericsson.se/ide/ trusty main" > /etc/apt/sources.list.d/enm.list

    echo "Adding Oracle Java 7 PPA repository..."
    add-apt-repository -y ppa:webupd8team/java

    echo "Adding Google GPG key..."
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -

    echo "Adding Google Chrome PPA repository..."
    echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list

    echo "Adding legacy Python PPA repository..."
    add-apt-repository -y ppa:fkrull/deadsnakes

    echo "Configuring Oracle Java installer..."
    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections

    echo "Updating list of available packages..."
    apt-get -y update

    echo "Installing packages..."
    apt-get -y install gnome-core enm-ide idea

    echo "Adding user to vagrant guest..."
    useradd -m "#{ENV['CURRENT_USER']}" -s /bin/bash
    echo "#{ENV['CURRENT_USER']} ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers.d/vagrant 

    echo "Copying SSH keys..."
    mkdir -p /home/#{ENV['CURRENT_USER']}
    cp -rp /mnt/#{ENV['CURRENT_USER']}/.ssh /home/#{ENV['CURRENT_USER']}
    cat /mnt/#{ENV['CURRENT_USER']}/.ssh/id_*.pub >>/home/#{ENV['CURRENT_USER']}/.ssh/authorized_keys
    chown -R #{ENV['CURRENT_USER']}:#{ENV['CURRENT_USER']} /home/#{ENV['CURRENT_USER']}/.ssh
    chmod 700 /home/#{ENV['CURRENT_USER']}/.ssh/
    chmod 600 /home/#{ENV['CURRENT_USER']}/.ssh/*

    echo "Rebooting..."
    reboot
SCRIPT

Vagrant.configure(2) do |config|

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # config.vm.box = "base"
  config.vm.box = "base"
  config.vm.box_url = "https://arm1s11-eiffel004.eiffel.gic.ericsson.se:8443/nexus/service/local/repositories/3pptools/content/com/ericsson/de/ide-virtualbox/1.0.1/ide-virtualbox-1.0.1.box"
  config.ssh.forward_x11 = true
  config.vm.provision "shell", inline: $install_ide
  config.vm.define "ENM IDE"
  config.vm.provider :virtualbox do |vb|
    vb.name = "IDE_Base"
    vb.memory = 4096
    vb.cpus = 2
  end
#  config.ssh.username = "#{ENV['CURRENT_USER']}"
#  config.ssh.password = "vagrant"
#  config.ssh.private_key_path = "~/.ssh/id_rsa.pub"
#  config.ssh.forward_agent = true
#  config.ssh.insert_key = true 


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

#  config.vm.synced_folder "#{ENV['HOME']}/.m2", "/mnt/#{ENV['CURRENT_USER']}/.m2",  mount_options: ["dmode=775,fmode=664"]
#  config.vm.synced_folder "#{ENV['HOME']}/workspace", "/mnt/#{ENV['CURRENT_USER']}/workspace",  mount_options: ["dmode=775,fmode=664"]
#  config.vm.synced_folder "#{ENV['HOME']}/Downloads", "/mnt/#{ENV['CURRENT_USER']}/Downloads",  mount_options: ["dmode=775,fmode=664"]
  config.vm.synced_folder "#{ENV['HOME']}/.ssh", "/mnt/#{ENV['CURRENT_USER']}/.ssh"
  config.vm.synced_folder "#{ENV['HOME']}", "/mnt/#{ENV['CURRENT_USER']}/home", :mount_options => ["ro","dmode=775,fmode=664"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
